/*!
* @erwinstone/globcopy v1.0.2 (https://github.com/erwinstone/globcopy#readme)
* Copyright 2021 - 2022 erwinstone
* Licensed under MIT (https://github.com/erwinstone/globcopy/blob/master/LICENSE)
*/
var F=Object.create;var i=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var v=(t,a)=>{for(var r in a)i(t,r,{get:a[r],enumerable:!0})},g=(t,a,r,e)=>{if(a&&typeof a=="object"||typeof a=="function")for(let n of W(a))!k.call(t,n)&&n!==r&&i(t,n,{get:()=>a[n],enumerable:!(e=S(a,n))||e.enumerable});return t};var x=(t,a,r)=>(r=t!=null?F($(t)):{},g(a||!t||!t.__esModule?i(r,"default",{value:t,enumerable:!0}):r,t)),A=t=>g(i({},"__esModule",{value:!0}),t);var E={};v(E,{globcopy:()=>P,globcopyRaw:()=>j});module.exports=A(E);var o=require("fs"),m=require("path"),p=require("perf_hooks"),y=x(require("fast-glob")),d=require("chokidar");const h={starting:t=>(console.log(`Starting '${t}'...`),p.performance.now()),finished:(t,a)=>{let r=Math.round(p.performance.now()-a),e=r>=1e3?`${(r/1e3).toFixed(2)} s`:`${Math.round(r)} ms`;e=e.toString(),console.log(`Finished '${t}' after ${e}`)}};async function f(t=null,a=null){const r=h.starting("copy");if(t===null){const e=await o.promises.readFile(a,"utf8");t=Object.entries(JSON.parse(e))}for(let[e,n]of t){const u=Array.isArray(n)?n:[n];await o.promises.mkdir(e,{recursive:!0});const w=await(0,y.default)(u,{onlyFiles:!1,markDirectories:!0}),b=D(u);w.forEach(async l=>{const c=b.map(s=>l.startsWith(s)?l.replace(s,e):null).filter(s=>s!==null)[0];c.endsWith("/")?await o.promises.mkdir(c,{recursive:!0}):await o.promises.copyFile(l,c)})}h.finished("copy",r)}function D(t){let a=[];return Array.isArray(t)&&(t=t.filter(r=>!r.startsWith("!")),t.forEach(r=>{a.push(r.split("/").filter(e=>!e.startsWith("*")&&!e.endsWith("*")).join("/"))})),[...new Set(a)]}function O(t){(0,d.watch)(t,{ignoreInitial:!0}).on("change",()=>setTimeout(async()=>await f(null,t),200)).on("ready",()=>console.log("Ready for changes"))}async function P(t){const a=m.posix.resolve(t.path);t.watch===!0?O(a):await f(null,a)}async function j(t){const a=Object.entries(JSON.parse(t));await f(a)}0&&(module.exports={globcopy,globcopyRaw});
