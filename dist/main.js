/*!
* @erwinstone/globcopy v1.0.1 (https://github.com/erwinstone/globcopy#readme)
* Copyright 2021 erwinstone
* Licensed under MIT (https://github.com/erwinstone/globcopy/blob/master/LICENSE)
*/
var S=Object.create;var l=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var h=t=>l(t,"__esModule",{value:!0});var v=(t,a)=>{for(var r in a)l(t,r,{get:a[r],enumerable:!0})},m=(t,a,r,e)=>{if(a&&typeof a=="object"||typeof a=="function")for(let n of $(a))!k.call(t,n)&&(r||n!=="default")&&l(t,n,{get:()=>a[n],enumerable:!(e=W(a,n))||e.enumerable});return t},o=(t,a)=>m(h(l(t!=null?S(j(t)):{},"default",!a&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),x=(t=>(a,r)=>t&&t.get(a)||(r=m(h({}),a,1),t&&t.set(a,r),r))(typeof WeakMap!="undefined"?new WeakMap:0);var J={};v(J,{globcopy:()=>P,globcopyObj:()=>E});var s=o(require("fs")),y=o(require("path")),p=o(require("perf_hooks")),d=o(require("fast-glob")),w=o(require("chokidar"));const b={starting:t=>(console.log(`Starting '${t}'...`),p.performance.now()),finished:(t,a)=>{let r=Math.round(p.performance.now()-a),e=r>=1e3?`${(r/1e3).toFixed(2)} s`:`${Math.round(r)} ms`;e=e.toString(),console.log(`Finished '${t}' after ${e}`)}};async function u(t=null,a=null){const r=b.starting("copy");if(t===null){const e=await s.promises.readFile(a,"utf8");t=Object.entries(JSON.parse(e))}for(let[e,n]of t){const g=Array.isArray(n)?n:[n];await s.promises.mkdir(e,{recursive:!0});const F=await(0,d.default)(g,{onlyFiles:!1,markDirectories:!0}),O=A(g);F.forEach(async c=>{const f=O.map(i=>c.startsWith(i)?c.replace(i,e):null).filter(i=>i!==null)[0];f.endsWith("/")?await s.promises.mkdir(f,{recursive:!0}):await s.promises.copyFile(c,f)})}b.finished("copy",r)}function A(t){let a=[];return Array.isArray(t)&&(t=t.filter(r=>!r.startsWith("!")),t.forEach(r=>{a.push(r.split("/").filter(e=>!e.startsWith("*")&&!e.endsWith("*")).join("/"))})),[...new Set(a)]}function D(t){(0,w.watch)(t,{ignoreInitial:!0}).on("change",()=>setTimeout(async()=>await u(null,t),200)).on("ready",()=>console.log("Ready for changes"))}async function P(t){const a=y.posix.resolve(t.path);t.watch===!0?D(a):await u(null,a)}async function E(t){const a=Object.entries(JSON.parse(t));await u(a)}module.exports=x(J);0&&(module.exports={globcopy,globcopyObj});
